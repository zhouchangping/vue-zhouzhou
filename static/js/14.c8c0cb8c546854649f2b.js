webpackJsonp([14],{fGxZ:function(e,n){},jINb:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});t("NYxO");var r=t("GQaK"),a={data:function(){return{scroll:null,isActive:!1,avatar:t("bVxe"),dataArtical:{pageTitle:"2018阿里面试题汇总",img:t("bVxe"),userName:"寻找许仙",pageTime:"2019-03-24"}}},methods:{mainTransition:function(e){this.isActive=!this.isActive,this.isUl=!this.isUl}},activated:function(){this.$store.commit("SET_TITLES","面试经验"),this.$store.commit("SET_ISCHILDSHOWS",!1),this.scroll.refresh()},mounted:function(){var e=this.$refs.pageContainer;this.scroll=new r.a(e,{scrollY:!0,click:!0,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT|CODE|PRE)$/}})},components:{}},i={render:function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("transition",{attrs:{name:"fadeMask"}},[t("div",{ref:"pageContainer",staticClass:"pageContainer"},[t("div",{staticClass:"page-better"},[t("div",{staticClass:"page-main"},[t("h1",{staticClass:"page-titile"},[e._v(e._s(e.dataArtical.pageTitle))]),e._v(" "),t("div",{staticClass:"page-user-info"},[t("p",{staticClass:"page-p"},[t("img",{staticClass:"page-user-img",attrs:{src:e.avatar}}),e._v(" "),t("span",{staticClass:"page-username"},[e._v(e._s(e.dataArtical.userName))])]),e._v(" "),t("p",{staticClass:"page-p"},[t("span",{staticClass:"page-user-time"},[e._v(e._s(e.dataArtical.pageTime))])])]),e._v(" "),t("div",{staticClass:"page-artical-msg"},[t("ul",{staticClass:"page-artical-ul"},[t("li",[t("h2",[e._v("1. css实现一个扇形,三角形")]),e._v(" "),t("div",{staticClass:"li-shangxing"}),e._v(" "),t("div",{staticClass:"li-shangjiaoxing"})]),e._v(" "),t("li",[t("h2",[e._v("2. flex布局的属性")]),e._v(" "),t("p",[e._v("\n                  容器属性： justify-content(水平轴) align-items(交叉轴) align-content(多轴) flex-direction(主轴方向) flex-wrap(换行) flex-flow(综合flex-direction，flex-wrap)\n                ")]),e._v(" "),t("p",[e._v("\n                  子元素属性：row(循序) flex-grow(放大) flex-shrink(缩小) flex-basis flex(综合q前三) align-self(自己) \n                ")])]),e._v(" "),t("li",[t("h2",[e._v("3. 状态码")]),e._v(" "),t("p",[e._v("\n                  100(请求接受到，继续) 200(请求成功) 301(永久重定向) 302(临时重定向) 304(本地缓存) 400(客户端请求的语法错误)  401(请求要求用户的身份认证) 403(服务器禁止访问)  404(找不到地址)  500(服务器错误) 502(网关) 503(由于超载或系统维护) 505(服务器不支持请求的HTTP协议的版本，无法完成处理)\n                ")])]),e._v(" "),t("li",[t("h2",[e._v("4. vue生命周期")]),e._v(" "),t("p",[e._v("\n                 beforeCreate created beforeMount mounted beforUpdate updated activated(keep-alive 组件激活时调用。) deactivated(keep-alive 组件停用时调用。) beforeDestory destoryed errorCaptured\n                ")])]),e._v(" "),t("li",[t("h2",[e._v("5. css3 html5新属性")]),e._v(" "),t("p",[e._v("\n                  css3: 边框(border-radius , border-image, box-shadow) 圆角(border-top-left-radius...) 背景(background-iamge/size/origin/clip) 渐变(background: linear-gradient/radial-gradient) 字体 2d(transform: translate rotate scale skew matrix)  3d()  过度(transition:) 多栏布局(column-count) 用户界面(resize box-sizing outline-offset) 图片(filter)\n                ")]),e._v(" "),t("p",[e._v("\n                  html5: 定位用户的位置(navigator.geolocation)  新元素(video audio source canvas aside article) 拖拽 svg  input web存储 websql 应用缓存 webworker sse websocket  \n                ")]),e._v(" "),t("p",{staticClass:"page-animation"})]),e._v(" "),t("li",{staticStyle:{width:"100%","overflow-x":"scroll"}},[t("h2",[e._v("6. es6实现工厂模式")]),e._v(" "),t("pre",[e._v("//User类\nclass User {\n  //构造器\n  constructor(opt) {\n    this.name = opt.name;\n    this.viewPage = opt.viewPage;\n  }\n\n  //静态方法\n  static getInstance(role) {\n    switch (role) {\n      case 'superAdmin':\n        return new User({ name: '超级管理员', viewPage: ['首页', '通讯录', '发现页', '应用数据', '权限管理'] });\n        break;\n      case 'admin':\n        return new User({ name: '管理员', viewPage: ['首页', '通讯录', '发现页', '应用数据'] });\n        break;\n      case 'user':\n        return new User({ name: '普通用户', viewPage: ['首页', '通讯录', '发现页'] });\n        break;\n      default:\n        throw new Error('参数错误, 可选参数:superAdmin、admin、user')\n    }\n  }\n}\n//调用\nlet superAdmin = User.getInstance('superAdmin');\nlet admin = User.getInstance('admin');\nlet normalUser = User.getInstance('user');\n              ")])]),e._v(" "),t("li",[t("h2",[e._v("7. 自适应窗口")]),e._v(" "),t("p",{staticStyle:{width:"100px",margin:"0 auto",background:"#000",color:"#fff","text-align":"center",height:"auto"}},[e._v("1321334234343232342342")])]),e._v(" "),t("li",[t("h2",[e._v("8. 浅拷贝和深拷贝")]),e._v(" "),t("pre",[t("code",[e._v("\n   // 浅拷贝\n  function shallowCopy(obj) {\n    if (typeof obj !== 'object') {return;} // 只拷贝对象\n    let newObj = obj instanceof Array ? [] : {};\n    for (let i in obj) {\n    // 遍历obj，并且判断是obj的属性才拷贝\n      if (obj.hasOwnProperty(i)) {\n        newObj[i] = obj[i];\n      }\n    }\n    return newObj;\n  }\n\n  // 深拷贝\n  function deepCopy(obj) {\n    let newObj;\n    if (typeof obj !== 'object') {return};\n    for (let i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        newObj[i] = typeof obj[i] === 'object' ? deepCopy(obj[i]) : obj[i];\n      }\n    }\n    return newObj;\n  }\n              ")])])]),e._v(" "),t("li",[t("h2",[e._v("10. vue数组监听")]),e._v(" "),t("p",[e._v("Vue.js是基于Object.defineProperty对对象实现“响应式化”，而对于数组，Vue.js提供的方法是重写push、pop、shift、unshift、splice、sort、reverse这七个数组方法。需要用数组下标修改数组并实现响应式数据变化，Vue.js提供了$set()及$remove()方法。Vue.set(vm.items, indexOfItem, newValue)")])]),e._v(" "),t("li",[t("h2",[e._v("11. 清除浮动")]),e._v(" "),t("p",[e._v(".clearfix, clear:both,overflow:hidden")]),e._v(" "),t("div",{staticStyle:{border:"1px solid red"}},[t("div",{staticStyle:{background:"#000",width:"40px",height:"40px",float:"left","margin-right":"2px"}}),e._v(" "),t("div",{staticStyle:{background:"#000",width:"40px",height:"40px",float:"left","margin-right":"2px"}}),e._v(" "),t("div",{staticStyle:{background:"#000",width:"40px",height:"40px",float:"left"}}),e._v(" "),t("div",{staticClass:"clearfix"})]),e._v(" "),t("pre",[e._v(".clearfix:after {\n  visibility: hidden;\n  display:block;\n  content: '';\n  clear: both;\n  font-size: 0;\n  height: 0;\n}\n              ")])]),e._v(" "),t("li",[t("h2",[e._v("12. 其中数据类型")]),e._v(" "),t("p",[e._v("null undefined object string boolean number Symbol objec包含数组和函数，null转为数字类型值为0,而undefined转为数字类型为 NaN(Not a Number)")])]),e._v(" "),t("li",[t("h2",[e._v("13. 模拟bind")]),e._v(" "),t("pre",[t("code",[e._v("\n  Function.prototype.bindFunc = function (ctx) {\n    let self = this;\n    let args = Array.prototype.slice.call(arguments, 1)\n    return function () {\n      let bindArgs = Array.prototype.slice.call(arguments);\n      self.apply(ctx, args.concat(bingArgs));\n    }\n  }\n             ")]),e._v(" ")])]),e._v(" "),t("li",[t("h2",[e._v("14. compose函数")]),e._v(" "),t("pre",[t("code",[e._v("\n利用 compose 将两个函数组合成一个函数，让代码从右向左运行，而不是由内而外运行，可读性大大提升。这便是函数组合。              \nfunction compose() {\n  let args = arguments;\n  let start = arg.length -1;\n  return function () {\n    let i = start;\n   var result = args[start].apply(this, arguments);\n    while(i--) {\n      result = args[i].call(this, result);\n    }\n    return result;\n  }\n}\nvar func = compose(a, b, c, d);\nfunc(1, 2)\n              ")])])]),e._v(" "),t("li",[t("h2",[e._v("15. 柯里化函数")]),e._v(" "),t("pre",[t("code",[e._v("\n柯里化是一种将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术。  参数复用，延迟执行，等到等于fn函数参数个数      \nfunction trueCurrying(fn, ...args) {\n    if (args.length >= fn.length) {\n        return fn(...args)\n    }\n    return function (...args2) {\n        return trueCurrying(fn, ...args, ...args2)\n    }\n}\n              ")])])]),e._v(" "),t("li",[t("h2",[e._v("16. 偏函数")]),e._v(" "),t("pre",[t("code",[e._v("\n偏函数，固定函数的某一个或几个参数，返回一个新的函数来接收剩下的变量参数。 \n  function partial(func, ...argsBound) {\n    return function(...args) { // (*)\n        return func.call(this, ...argsBound, ...args);\n        }\n    }\n              ")])])]),e._v(" "),t("li",[t("h2",[e._v("17. compose和面向切面")]),e._v(" "),t("pre",[t("code",[e._v('\n需要对函数绑定两个行为 before 和 after，before执行函数多元部分（启动），after执行函数单元部分\nFunction.prototype.before=function(beforefn){\n    var __self=this;\n    //保存原函数的引用\n    return function(){\n    //返回包含了原函数和新函数的"代理"函数\n        beforefn.apply(this,arguments);\n    //执行新函数,且保证this不被劫持,新函数接受的参数\n    //也会被原封不动地传入原函数,新函数在原函数之前执行\n        return __self.apply(this,arguments);\n    //执行原函数并返回原函数的执行结果\n    //并且保证this不被劫持\n    }\n}\nFunction.prototype.after=function(afterfn){\n    var __self=this;\n    return function(){\n        var ret=__self.apply(this,arguments);\n        afterfn.apply(this,arguments);\n        return ret;\n    }\n}\n\n'),e._v("\nFunction.prototype.after = function(afterfn) {\n    var __self = this;\n    return function() {\n        var ret = __self.apply(this, arguments);\n        afterfn.apply(this, arguments);\n        return ret;\n    }\n}\nvar showLogin=function(){\n  console.log(\"打开登录浮层\");\n}\nvar log=function(){\n  console.log(\"上传标签为:\"+this.getAttribute('tag'));\n}\nshowLogin=showLogin.after(log);\ndocument.getElementById('button').onclick=showLogin;\n              ")])])]),e._v(" "),t("li",[t("h2",[e._v("浏览器渲染原理")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://taobaofed.org/blog/2016/04/25/performance-composite/"}},[e._v(" http://taobaofed.org/blog/2016/04/25/performance-composite/")]),e._v("无线性能优化：Composite")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000014520786"}},[e._v("https://segmentfault.com/a/1190000014520786")]),e._v(" 浏览器渲染流程&Composite（渲染层合并）简单总结")])])])])])])])])},staticRenderFns:[]};var s=t("VU/8")(a,i,!1,function(e){t("fGxZ")},"data-v-24bd07fa",null);n.default=s.exports}});